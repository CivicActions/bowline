{
  "variables": {
    "project_id": "{{env `PROJECT`}}",
    "azure_subscription_id": "{{env `AZURE_SUBSCRIPTION_ID`}}",
    "azure_client_id": "{{env `AZURE_CLIENT_ID`}}",
    "azure_client_secret": "{{env `AZURE_CLIENT_SECRET`}}",
    "azure_tenant_id": "{{env `AZURE_TENANT_ID`}}"
  },
  "builders": [
    {
      "name": "ubuntu-1604",
      "type": "googlecompute",
      "project_id": "{{user `project_id`}}",
      "source_image_family": "ubuntu-1604-lts",
      "source_image_project_id": "ubuntu-os-cloud",
      "zone": "us-central1-a",
      "disk_size": "10",
      "image_name": "ubuntu-1604-jenkins-agent-{{timestamp}}",
      "image_description": "Ubuntu 16.04 LTS image with the built in Docker and all stable Docker Compose",
      "image_family": "jenkins-agent",
      "ssh_username": "ubuntu"
    },
    {
      "name": "ubuntu-1804",
      "type": "googlecompute",
      "project_id": "{{user `project_id`}}",
      "source_image_family": "ubuntu-1804-lts",
      "source_image_project_id": "ubuntu-os-cloud",
      "zone": "us-central1-a",
      "disk_size": "10",
      "image_name": "ubuntu-1804-jenkins-agent-{{timestamp}}",
      "image_description": "Ubuntu 18.04 LTS image with the built in Docker and all stable Docker Compose",
      "image_family": "jenkins-agent",
      "ssh_username": "ubuntu"
    },
    {
      "name": "ubuntu-1604-latest-docker",
      "type": "googlecompute",
      "project_id": "{{user `project_id`}}",
      "source_image_family": "ubuntu-1604-lts",
      "source_image_project_id": "ubuntu-os-cloud",
      "zone": "us-central1-a",
      "disk_size": "10",
      "image_name": "ubuntu-1604-latest-docker-jenkins-agent-{{timestamp}}",
      "image_description": "Ubuntu 16.04 LTS image with upgraded docker.com edge Docker and all stable Docker Compose",
      "image_family": "jenkins-agent",
      "ssh_username": "ubuntu"
    },
    {
      "name": "ubuntu-1804-latest-docker",
      "type": "googlecompute",
      "project_id": "{{user `project_id`}}",
      "source_image_family": "ubuntu-1804-lts",
      "source_image_project_id": "ubuntu-os-cloud",
      "zone": "us-central1-a",
      "disk_size": "10",
      "image_name": "ubuntu-1804-latest-docker-jenkins-agent-{{timestamp}}",
      "image_description": "Ubuntu 18.04 LTS image with upgraded docker.com edge Docker and all stable Docker Compose",
      "image_family": "jenkins-agent",
      "ssh_username": "ubuntu"
    },
    {
      "name": "centos-7",
      "type": "googlecompute",
      "project_id": "{{user `project_id`}}",
      "source_image_family": "centos-7",
      "source_image_project_id": "centos-cloud",
      "zone": "us-central1-a",
      "disk_size": "10",
      "image_name": "centos-7-jenkins-agent-{{timestamp}}",
      "image_description": "CentOS 7 with the built in Docker and all stable Docker Compose",
      "image_family": "jenkins-agent",
      "ssh_username": "packer"
    },
    {
      "name": "centos-7-latest-docker",
      "type": "googlecompute",
      "project_id": "{{user `project_id`}}",
      "source_image_family": "centos-7",
      "source_image_project_id": "centos-cloud",
      "zone": "us-central1-a",
      "disk_size": "10",
      "image_name": "centos-7-latest-docker-jenkins-agent-{{timestamp}}",
      "image_description": "CentOS 7 with upgraded docker.com edge Docker and all stable Docker Compose",
      "image_family": "jenkins-agent",
      "ssh_username": "packer"
    },
    {
      "name": "windows-server-2016",
      "type": "azure-arm",
      "subscription_id": "{{user `azure_subscription_id`}}",
      "client_id": "{{user `azure_client_id`}}",
      "client_secret": "{{user `azure_client_secret`}}",
      "location": "centralus",
      "tenant_id": "{{user `azure_tenant_id`}}",
      "managed_image_resource_group_name": "jenkins",
      "managed_image_name": "windows-server-2016-{{timestamp}}",
      "os_type": "Windows",
      "image_publisher": "MicrosoftWindowsServer",
      "image_offer": "WindowsServer",
      "image_sku": "2016-Datacenter",
      "communicator": "winrm",
      "winrm_use_ssl": true,
      "winrm_insecure": true,
      "winrm_timeout": "3m",
      "winrm_username": "packer",
      "vm_size": "Standard_D2_v3"
    }
  ],
  "provisioners": [
    {
      "type": "shell",
      "inline": [
        "sudo rm -rf /var/lib/apt/lists/*",
        "sudo apt-get update",
        "sudo apt-get install -y default-jre docker.io zsh mksh",
        "sudo adduser --disabled-password --gecos '' jenkins",
        "sudo usermod -aG docker jenkins"
      ],
      "only": [
        "ubuntu-1604",
        "ubuntu-1804"
      ]
    },
    {
      "type": "shell",
      "inline": [
        "sudo rm -rf /var/lib/apt/lists/*",
        "sudo apt-get update",
        "sudo apt-get install -y default-jre zsh mksh",
        "curl -fsSL https://get.docker.com -o get-docker.sh",
        "sudo sh get-docker.sh",
        "sudo adduser --disabled-password --gecos '' jenkins",
        "sudo usermod -aG docker jenkins"
      ],
      "only": [
        "ubuntu-1604-latest-docker",
        "ubuntu-1804-latest-docker"
      ]
    },
    {
      "type": "shell",
      "inline": [
        "sudo yum -y update",
        "sudo yum -y install git docker java-1.8.0-openjdk zsh mksh",
        "sudo systemctl enable docker.service",
        "sudo groupadd docker",
        "sudo adduser jenkins",
        "sudo usermod -aG docker jenkins"
      ],
      "only": [
        "centos-7"
      ]
    },
    {
      "type": "shell",
      "inline": [
        "sudo yum -y update",
        "sudo yum -y install git java-1.8.0-openjdk zsh mksh",
        "curl -fsSL https://get.docker.com -o get-docker.sh",
        "sudo sh get-docker.sh",
        "sudo systemctl enable docker.service",
        "sudo adduser jenkins",
        "sudo usermod -aG docker jenkins"
      ],
      "only": [
        "centos-7-latest-docker"
      ]
    },
    {
      "type": "shell",
      "scripts": [
        "./scripts/install-docker-compose.sh"
      ],
      "only": [
        "ubuntu-1604",
        "ubuntu-1804",
        "ubuntu-1604-latest-docker",
        "ubuntu-1804-latest-docker",
        "centos-7",
        "centos-7-latest-docker"
      ]
    },
    {
      "type": "powershell",
      "inline": [
        "Set-ExecutionPolicy Bypass -Scope Process -Force; iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))",
        "Enable-WindowsOptionalFeature -NoRestart -Online -FeatureName Microsoft-Hyper-V -All",
        "Enable-WindowsOptionalFeature -NoRestart -Online -FeatureName Containers -All",
        "choco install -y openssh -params '\"\/SSHServerFeature\"'",
        "choco install -y git server-jre8 docker-for-windows docker-compose cygwin"
      ],
      "only": [
        "windows-server-2016"
      ]
    },
    {
      "type": "windows-restart",
      "only": [
        "windows-server-2016"
      ]
    },
    {
      "type": "powershell",
      "inline": [
        "Start-Sleep -s 60",
        "if( Test-Path $Env:SystemRoot\\windows\\system32\\Sysprep\\unattend.xml ){ rm $Env:SystemRoot\\windows\\system32\\Sysprep\\unattend.xml -Force}",
        "& $env:SystemRoot\\System32\\Sysprep\\Sysprep.exe /oobe /generalize /quiet /quit",
        "while($true) { $imageState = Get-ItemProperty HKLM:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Setup\\State | Select ImageState; if($imageState.ImageState -ne 'IMAGE_STATE_GENERALIZE_RESEAL_TO_OOBE') { Write-Output $imageState.ImageState; Start-Sleep -s 10  } else { break } }",
        "Start-Sleep -s 60"
      ],
      "only": [
        "windows-server-2016"
      ]
    }
  ]
}